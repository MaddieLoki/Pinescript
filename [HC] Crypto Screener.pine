//@version=3
study("[HC] Crypto Alts Screener", shorttitle="Alts Screener", overlay=false, scale=scale.right)

src = close
tPeriod = input("60", title="Ticker Time Frame")

//* Algo Strategy Inputs *//
inpDescriptionStrategy = input(defval=true, title = "**Strategy Settings**")
useRes      = input(defval = true, title = "Use Alternate Resolution?")
intRes      = input(defval = 3,    title = "Multiplier for Alernate Resolution")
stratRes    = ismonthly? tostring(interval*intRes,"###M") : isweekly? tostring(interval*intRes,"###W") : isdaily?  tostring(interval*intRes,"###D") : isintraday ? tostring(interval*intRes,"####") : '60'
basisType   = input(defval = "SMMA", title = "Basis Moving Average Type: ", options=["SMA", "EMA", "DEMA", "TEMA", "WMA", "VWMA", "SMMA", "HullMA", "LSMA", "ALMA", "SSMA", "TMA"])
basisLen    = input(defval = 8, title = "MA Period", minval = 1)
offsetSigma = input(defval = 6, title = "Offset for LSMA / Sigma for ALMA", minval = 0)
offsetALMA  = input(defval = 0.85, title = "Offset for ALMA", minval = 0, step = 0.01)
delayOffset = input(defval = 0, title = "Delay Open/Close MA (Forces Non-Repainting)", minval = 0, step = 1)
cloudSpread = input(defval = 1, title="Cloud Spread Trigger", minval = 0)

//* Return MA Input Selection *//
variant(type, src, len, offSig, offALMA) =>
    v1 = sma(src, len)                                                  // Simple
    v2 = ema(src, len)                                                  // Exponential
    v3 = 2 * v2 - ema(v2, len)                                          // Double Exponential
    v4 = 3 * (v2 - ema(v2, len)) + ema(ema(v2, len), len)               // Triple Exponential
    v5 = wma(src, len)                                                  // Weighted
    v6 = vwma(src, len)                                                 // Volume Weighted
    v7 = 0.0
    v7 := na(v7[1]) ? sma(src, len) : (v7[1] * (len - 1) + src) / len    // Smoothed
    v8 = wma(2 * wma(src, len / 2) - wma(src, len), round(sqrt(len)))   // Hull
    v9 = linreg(src, len, offSig)                                       // Least Squares
    v10 = alma(src, len, offALMA, offSig)                               // Arnaud Legoux
    v11 = sma(v1,len)                                                   // Triangular (extreme smooth)
    // SuperSmoother filter
    // © 2013  John F. Ehlers
    a1 = exp(-1.414*3.14159 / len)
    b1 = 2*a1*cos(1.414*3.14159 / len)
    c2 = b1
    c3 = (-a1)*a1
    c1 = 1 - c2 - c3
    v12 = 0.0
    v12 := c1*(src + nz(src[1])) / 2 + c2*nz(v12[1]) + c3*nz(v12[2])
    type=="EMA"?v2 : type=="DEMA"?v3 : type=="TEMA"?v4 : type=="WMA"?v5 : type=="VWMA"?v6 : type=="SMMA"?v7 : type=="HullMA"?v8 : type=="LSMA"?v9 : type=="ALMA"?v10 : type=="TMA"?v11: type=="SSMA"?v12: v1

//* Security Wrapper for Alternate Resolution *//
reso(exp, use, res, t_id) => use ? security(t_id, res, exp, gaps=barmerge.gaps_off, lookahead=barmerge.lookahead_on) : exp

calcLongT(t_id) =>
    closeSeries     = variant(basisType, close[delayOffset], basisLen, offsetSigma, offsetALMA)
    openSeries      = variant(basisType, open[delayOffset], basisLen, offsetSigma, offsetALMA)
    closeSeriesAlt = reso(closeSeries, useRes, stratRes, t_id)
    openSeriesAlt = reso(openSeries, useRes, stratRes, t_id)
    longTrigger = false
    longTrigger := cross(closeSeriesAlt, openSeriesAlt) and closeSeriesAlt > openSeriesAlt
    // rsiobv = na
    // rsiobv := rsi(obv, rsiP)
    // histB_IsUp = hist > hist[1] and hist <= 0 //Histrogram ticket up and below 0
    // macdND = macd < 0 and macd < macd[1] and macd < signal //macdNegativeDowntrend
    // macdBullDivN = macdND and histB_IsUp //macd in negative downtrend and histo tick up = lime 
    // longTrigger = false
    // longTrigger := rsiobv <= 30 and rsi2 <= 10 and rsi5 <= 20 and rsi14 <= 30 //and macdBullDivN

calcShortT(t_id) =>
    closeSeries     = variant(basisType, close[delayOffset], basisLen, offsetSigma, offsetALMA)
    openSeries      = variant(basisType, open[delayOffset], basisLen, offsetSigma, offsetALMA)
    closeSeriesAlt = reso(closeSeries, useRes, stratRes, t_id)
    openSeriesAlt = reso(openSeries, useRes, stratRes, t_id)
    shortTrigger = false
    shortTrigger := cross(closeSeriesAlt, openSeriesAlt) and closeSeriesAlt < openSeriesAlt
    // rsiobv = na
    // rsiobv := rsi(obv, rsiP)
    // macdPU = macd >= 0 and macd > macd[1] and macd > signal //macdPositiveUptrend
    // histA_IsDown = hist < hist[1] and hist > 0 //Histogram ticking down and above 0
    // macdBearDivP = macdPU and histA_IsDown //macd in positive uptrend and histo tick down = red
    // shortTrigger = false
    // shortTrigger := rsiobv >= 70 and rsi2 >= 90 and rsi5 >= 80 and rsi14 >= 70 //and macdBearDivP


BTC_240_L = security("Binance:BTCUSDT", tPeriod, calcLongT("Binance:BTCUSDT"))
BTC_240_S = security("Binance:BTCUSDT", tPeriod, calcShortT("Binance:BTCUSDT"))
plotchar(11, char="?", color= BTC_240_S ? red : BTC_240_L ? lime : black, transp=25, location=location.absolute)
hline(10.5, title="BTC", color=gray, linestyle=dotted, linewidth=1)

ENJ_240_L = security("Binance:ENJBTC", tPeriod, calcLongT("Binance:ENJBTC"))
ENJ_240_S = security("Binance:ENJBTC", tPeriod, calcShortT("Binance:ENJBTC"))
plotchar(10, char="?", color= ENJ_240_S ? red : ENJ_240_L ? lime : black, transp=25, location=location.absolute)
hline(9.5, title="ENJ", color=gray, linestyle=dotted, linewidth=1)

LOOM_240_L = security("Binance:LOOMBTC", tPeriod, calcLongT("Binance:LOOMBTC"))
LOOM_240_S = security("Binance:LOOMBTC", tPeriod, calcShortT("Binance:LOOMBTC"))
plotchar(9, char="?", color= LOOM_240_S ? red : LOOM_240_L ? lime : black, transp=25, location=location.absolute)
hline(8.5, title="LOOM", color=gray, linestyle=dotted, linewidth=1)

BNB_240_L = security("Binance:BNBBTC", tPeriod, calcLongT("Binance:BNBBTC"))
BNB_240_S = security("Binance:BNBBTC", tPeriod, calcShortT("Binance:BNBBTC"))
plotchar(8, char="?", color= BNB_240_S ? red : BNB_240_L ? lime : black, transp=25, location=location.absolute)
hline(7.5, title="BNB", color=gray, linestyle=dotted, linewidth=1)

BAT_240_L = security("Binance:BATBTC", tPeriod, calcLongT("Binance:BATBTC"))
BAT_240_S = security("Binance:BATBTC", tPeriod, calcShortT("Binance:BATBTC"))
plotchar(7, char="?", color= BAT_240_S ? red : BAT_240_L ? lime : black, transp=25, location=location.absolute)
hline(6.5, title="BAT", color=gray, linestyle=dotted, linewidth=1)

XEM_240_L = security("Binance:XEMBTC", tPeriod, calcLongT("Binance:XEMBTC"))
XEM_240_S = security("Binance:XEMBTC", tPeriod, calcShortT("Binance:XEMBTC"))
plotchar(6, char="?", color= XEM_240_S ? red : XEM_240_L ? lime : black, transp=25, location=location.absolute)
hline(5.5, title="XEM", color=gray, linestyle=dotted, linewidth=1)

XLM_240_L = security("Binance:XLMBTC", tPeriod, calcLongT("Binance:XLMBTC"))
XLM_240_S = security("Binance:XLMBTC", tPeriod, calcShortT("Binance:XLMBTC"))
plotchar(5, char="?", color= XLM_240_S ? red : XLM_240_L ? lime : black, transp=25, location=location.absolute)
hline(4.5, title="XLM", color=gray, linestyle=dotted, linewidth=1)

ONT_240_L = security("Binance:ONTBTC", tPeriod, calcLongT("Binance:ONTBTC"))
ONT_240_S = security("Binance:ONTBTC", tPeriod, calcShortT("Binance:ONTBTC"))
plotchar(4, char="?", color= ONT_240_S ? red : ONT_240_L ? lime : black, transp=25, location=location.absolute)
hline(3.5, title="ONT", color=gray, linestyle=dotted, linewidth=1)

NULS_240_L = security("Binance:NULSBTC", tPeriod, calcLongT("Binance:NULSBTC"))
NULS_240_S = security("Binance:NULSBTC", tPeriod, calcShortT("Binance:NULSBTC"))
plotchar(3, char="?", color= NULS_240_S ? red : NULS_240_L ? lime : black, transp=25, location=location.absolute)
hline(2.5, title="NULS", color=gray, linestyle=dotted, linewidth=1)

ZIL_240_L = security("Binance:ZILBTC", tPeriod, calcLongT("Binance:ZILBTC"))
ZIL_240_S = security("Binance:ZILBTC", tPeriod, calcShortT("Binance:ZILBTC"))
plotchar(2, char="?", color= ZIL_240_S ? red : ZIL_240_L ? lime : black, transp=25, location=location.absolute)
hline(1.5, title="ZIL", color=gray, linestyle=dotted, linewidth=1)

